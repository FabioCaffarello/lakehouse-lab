[tool.coverage.run]
branch = true
source = ["usecases"]

[tool.coverage.report]
exclude_lines = ["if TYPE_CHECKING:"]
show_missing = true

[tool.pytest.ini_options]
addopts = """
 --cov
 --cov-fail-under=70
 --cov-report html:'../../../../coverage/libs/ddd/application/usecases/html'
 --cov-report xml:'../../../../coverage/libs/ddd/application/usecases/coverage.xml'
 --html='../../../../reports/libs/ddd/application/usecases/unittests/html/index.html'
 --junitxml='../../../../reports/libs/ddd/application/usecases/unittests/junit.xml'
"""

[tool.poetry]
name = "ddd-application-usecases"
version = "1.0.0"
description = "Automatically generated by Nx."
authors = []
license = "Proprietary"
readme = "README.md"

[[tool.poetry.packages]]
include = "usecases"

[tool.poetry.dependencies]
python = ">=3.9,<4"
fastapi = "^0.115.12"
confluent-kafka = "^2.9.0"

[tool.poetry.dependencies.shared-logger]
path = "../../../shared/logger"
develop = true

[tool.poetry.dependencies.ddd-value-objects]
path = "../../value-objects"
develop = true

[tool.poetry.dependencies.ddd-infra-storage]
path = "../../infra/storage"
develop = true

[tool.poetry.dependencies.ddd-infra-producers]
path = "../../infra/producers"
develop = true

[tool.poetry.dependencies.ddd-application-dtos]
path = "../dtos"
develop = true

[tool.poetry.dependencies.fake-factory]
path = "../../../fake-factory"
develop = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
