apiVersion: sparkoperator.k8s.io/v1beta2
kind: SparkApplication
metadata:
  name: spark-iceberg-minio
  namespace: spark-jobs
spec:
  deps:
    packages:
      - org.apache.iceberg:iceberg-spark-runtime-3.5_2.12:1.7.0
      - org.apache.hadoop:hadoop-aws:3.3.4
      - com.amazonaws:aws-java-sdk-bundle:1.12.262
  type: Python
  mode: cluster
  image: "fabiocaffarello/spark-iceberg:3.5.3-py"
  imagePullPolicy: IfNotPresent
  mainApplicationFile: "s3a://lakehouse-lab-jobs/scripts/test_iceberg.py"
  sparkConf:
    spark.driver.extraJavaOptions: "-Divy.cache.dir=/tmp -Divy.home=/tmp"
    spark.hadoop.fs.s3a.endpoint: "http://minio.storage.svc.cluster.local:9000"
    spark.hadoop.fs.s3a.access.key: "minio"
    spark.hadoop.fs.s3a.secret.key: "minio123"
    spark.hadoop.fs.s3a.connection.ssl.enabled: "false"
    spark.hadoop.fs.s3a.path.style.access: "True"
    spark.hadoop.fs.s3a.fast.upload: "True"
    spark.hadoop.fs.s3a.multipart.size: "104857600"
    fs.s3a.connection.maximum: "100"
    spark.hadoop.fs.s3.impl: "org.apache.hadoop.fs.s3a.S3AFileSystem"
    spark.hadoop.fs.s3a.impl: "org.apache.hadoop.fs.s3a.S3AFileSystem"
  sparkVersion: 3.5.3
  restartPolicy:
    type: Never
  driver:
    cores: 1
    memory: 512m
    labels:
      version: 3.5.3
    serviceAccount: spark-operator-spark
    env:
      - name: AWS_REGION
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: AWS_REGION
      - name: AWS_ACCESS_KEY_ID
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: AWS_ACCESS_KEY_ID
      - name: AWS_SECRET_ACCESS_KEY
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: AWS_SECRET_ACCESS_KEY
      - name: S3_ENDPOINT
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: S3_ENDPOINT
  executor:
    cores: 1
    instances: 1
    memory: 512m
    labels:
      version: 3.5.3
    env:
      - name: AWS_REGION
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: AWS_REGION
      - name: AWS_ACCESS_KEY_ID
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: AWS_ACCESS_KEY_ID
      - name: AWS_SECRET_ACCESS_KEY
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: AWS_SECRET_ACCESS_KEY
      - name: S3_ENDPOINT
        valueFrom:
          secretKeyRef:
            name: minio-secret
            key: S3_ENDPOINT
